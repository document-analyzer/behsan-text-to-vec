stages:
  - lint
  - test
  - build
  - upload

lint_package:
  image: docker.mci.dev/python:3.10
  script:
    - pip install ruff
    - python -m ruff .
  stage: lint

test_package:
  image: docker.mci.dev/python:3.10
  script:
    - pip install pytest pytest-cov
    - pip install .
    - python -m pytest  --cov-report html --cov-report term --cov
  stage: test
  artifacts:
    paths:
      - coverage_html_report/*

build_package:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d{1,2}\.\d{1,2}\.\d{1,3}(?:[.-].+)?$/'
      when: always
  image: docker.mci.dev/python:3.10
  script:
    - pip install build
    - python -m build
  artifacts:
    paths:
      - dist/*
  stage: build


upload_package:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d{1,2}\.\d{1,2}\.\d{1,3}(?:[.-].+)?$/'
      when: always
  image: docker.mci.dev/python:3.10
  script:
    - pip install twine
    - python -m twine upload dist/*  --repository-url https://repo.mci.dev/artifactory/api/pypi/local-pypi  -u ${CICD_REPO_USER} -p ${CICD_REPO_PASS}
  retry: 2
  stage: upload
  needs:
    - job: build_package
      artifacts: true